// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aspnetcore.proto

#include "aspnetcore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_aspnetcore_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MvcRoute_aspnetcore_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
namespace aspnet {
namespace core {
class MvcRouteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MvcRoute> _instance;
} _MvcRoute_default_instance_;
}  // namespace core
}  // namespace aspnet
static void InitDefaultsscc_info_MvcRoute_aspnetcore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aspnet::core::_MvcRoute_default_instance_;
    new (ptr) ::aspnet::core::MvcRoute();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aspnet::core::MvcRoute::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MvcRoute_aspnetcore_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MvcRoute_aspnetcore_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_aspnetcore_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_aspnetcore_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_aspnetcore_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_aspnetcore_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aspnet::core::MvcRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aspnet::core::MvcRoute, method_),
  PROTOBUF_FIELD_OFFSET(::aspnet::core::MvcRoute, source_),
  PROTOBUF_FIELD_OFFSET(::aspnet::core::MvcRoute, route_pattern_),
  PROTOBUF_FIELD_OFFSET(::aspnet::core::MvcRoute, custom_method_attributes_),
  PROTOBUF_FIELD_OFFSET(::aspnet::core::MvcRoute, custom_return_type_),
  PROTOBUF_FIELD_OFFSET(::aspnet::core::MvcRoute, custom_method_body_template_),
  PROTOBUF_FIELD_OFFSET(::aspnet::core::MvcRoute, custom_method_body_inline_),
  PROTOBUF_FIELD_OFFSET(::aspnet::core::MvcRoute, is_empty_request_),
  PROTOBUF_FIELD_OFFSET(::aspnet::core::MvcRoute, custom_exception_handling_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::aspnet::core::MvcRoute)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aspnet::core::_MvcRoute_default_instance_),
};

const char descriptor_table_protodef_aspnetcore_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020aspnetcore.proto\022\013aspnet.core\032\036google/"
  "protobuf/wrappers.proto\032 google/protobuf"
  "/descriptor.proto\"\367\002\n\010MvcRoute\022\'\n\006method"
  "\030\001 \001(\0162\027.aspnet.core.HttpMethod\022,\n\006sourc"
  "e\030\002 \001(\0162\034.aspnet.core.HttpInputSource\0223\n"
  "\rroute_pattern\030\003 \001(\0132\034.google.protobuf.S"
  "tringValue\022 \n\030custom_method_attributes\030\004"
  " \003(\t\0228\n\022custom_return_type\030\005 \001(\0132\034.googl"
  "e.protobuf.StringValue\022#\n\033custom_method_"
  "body_template\030\006 \001(\t\022!\n\031custom_method_bod"
  "y_inline\030\007 \003(\t\022\030\n\020is_empty_request\030\010 \001(\010"
  "\022!\n\031custom_exception_handling\030\t \003(\t*`\n\nH"
  "ttpMethod\022\022\n\016HttpMethod_Get\020\000\022\023\n\017HttpMet"
  "hod_Post\020\001\022\022\n\016HttpMethod_Put\020\002\022\025\n\021HttpMe"
  "thod_Delete\020\003*\235\001\n\017HttpInputSource\022\037\n\033Htt"
  "pInputSource_Unspecified\020\000\022\030\n\024HttpInputS"
  "ource_Body\020\001\022\030\n\024HttpInputSource_Form\020\002\022\031"
  "\n\025HttpInputSource_Query\020\003\022\032\n\026HttpInputSo"
  "urce_Header\020\004:E\n\003api\022\036.google.protobuf.M"
  "ethodOptions\030\347\332\254\014 \001(\0132\025.aspnet.core.MvcR"
  "outeb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_aspnetcore_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_aspnetcore_2eproto_sccs[1] = {
  &scc_info_MvcRoute_aspnetcore_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_aspnetcore_2eproto_once;
static bool descriptor_table_aspnetcore_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_aspnetcore_2eproto = {
  &descriptor_table_aspnetcore_2eproto_initialized, descriptor_table_protodef_aspnetcore_2eproto, "aspnetcore.proto", 812,
  &descriptor_table_aspnetcore_2eproto_once, descriptor_table_aspnetcore_2eproto_sccs, descriptor_table_aspnetcore_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_aspnetcore_2eproto::offsets,
  file_level_metadata_aspnetcore_2eproto, 1, file_level_enum_descriptors_aspnetcore_2eproto, file_level_service_descriptors_aspnetcore_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_aspnetcore_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_aspnetcore_2eproto), true);
namespace aspnet {
namespace core {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* HttpMethod_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_aspnetcore_2eproto);
  return file_level_enum_descriptors_aspnetcore_2eproto[0];
}
bool HttpMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* HttpInputSource_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_aspnetcore_2eproto);
  return file_level_enum_descriptors_aspnetcore_2eproto[1];
}
bool HttpInputSource_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MvcRoute::InitAsDefaultInstance() {
  ::aspnet::core::_MvcRoute_default_instance_._instance.get_mutable()->route_pattern_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
  ::aspnet::core::_MvcRoute_default_instance_._instance.get_mutable()->custom_return_type_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class MvcRoute::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& route_pattern(const MvcRoute* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& custom_return_type(const MvcRoute* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
MvcRoute::_Internal::route_pattern(const MvcRoute* msg) {
  return *msg->route_pattern_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
MvcRoute::_Internal::custom_return_type(const MvcRoute* msg) {
  return *msg->custom_return_type_;
}
void MvcRoute::clear_route_pattern() {
  if (GetArenaNoVirtual() == nullptr && route_pattern_ != nullptr) {
    delete route_pattern_;
  }
  route_pattern_ = nullptr;
}
void MvcRoute::clear_custom_return_type() {
  if (GetArenaNoVirtual() == nullptr && custom_return_type_ != nullptr) {
    delete custom_return_type_;
  }
  custom_return_type_ = nullptr;
}
MvcRoute::MvcRoute()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aspnet.core.MvcRoute)
}
MvcRoute::MvcRoute(const MvcRoute& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      custom_method_attributes_(from.custom_method_attributes_),
      custom_method_body_inline_(from.custom_method_body_inline_),
      custom_exception_handling_(from.custom_exception_handling_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  custom_method_body_template_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.custom_method_body_template().empty()) {
    custom_method_body_template_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.custom_method_body_template_);
  }
  if (from.has_route_pattern()) {
    route_pattern_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.route_pattern_);
  } else {
    route_pattern_ = nullptr;
  }
  if (from.has_custom_return_type()) {
    custom_return_type_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.custom_return_type_);
  } else {
    custom_return_type_ = nullptr;
  }
  ::memcpy(&method_, &from.method_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_empty_request_) -
    reinterpret_cast<char*>(&method_)) + sizeof(is_empty_request_));
  // @@protoc_insertion_point(copy_constructor:aspnet.core.MvcRoute)
}

void MvcRoute::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MvcRoute_aspnetcore_2eproto.base);
  custom_method_body_template_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&route_pattern_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_empty_request_) -
      reinterpret_cast<char*>(&route_pattern_)) + sizeof(is_empty_request_));
}

MvcRoute::~MvcRoute() {
  // @@protoc_insertion_point(destructor:aspnet.core.MvcRoute)
  SharedDtor();
}

void MvcRoute::SharedDtor() {
  custom_method_body_template_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_pattern_;
  if (this != internal_default_instance()) delete custom_return_type_;
}

void MvcRoute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MvcRoute& MvcRoute::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MvcRoute_aspnetcore_2eproto.base);
  return *internal_default_instance();
}


void MvcRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:aspnet.core.MvcRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  custom_method_attributes_.Clear();
  custom_method_body_inline_.Clear();
  custom_exception_handling_.Clear();
  custom_method_body_template_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && route_pattern_ != nullptr) {
    delete route_pattern_;
  }
  route_pattern_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && custom_return_type_ != nullptr) {
    delete custom_return_type_;
  }
  custom_return_type_ = nullptr;
  ::memset(&method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_empty_request_) -
      reinterpret_cast<char*>(&method_)) + sizeof(is_empty_request_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MvcRoute::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .aspnet.core.HttpMethod method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_method(static_cast<::aspnet::core::HttpMethod>(val));
        } else goto handle_unusual;
        continue;
      // .aspnet.core.HttpInputSource source = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_source(static_cast<::aspnet::core::HttpInputSource>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue route_pattern = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_route_pattern(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string custom_method_attributes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_custom_method_attributes(), ptr, ctx, "aspnet.core.MvcRoute.custom_method_attributes");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue custom_return_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_custom_return_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string custom_method_body_template = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_custom_method_body_template(), ptr, ctx, "aspnet.core.MvcRoute.custom_method_body_template");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string custom_method_body_inline = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_custom_method_body_inline(), ptr, ctx, "aspnet.core.MvcRoute.custom_method_body_inline");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // bool is_empty_request = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          is_empty_request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string custom_exception_handling = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_custom_exception_handling(), ptr, ctx, "aspnet.core.MvcRoute.custom_exception_handling");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 74);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MvcRoute::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:aspnet.core.MvcRoute)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .aspnet.core.HttpMethod method = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_method(static_cast< ::aspnet::core::HttpMethod >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .aspnet.core.HttpInputSource source = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_source(static_cast< ::aspnet::core::HttpInputSource >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue route_pattern = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_route_pattern()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string custom_method_attributes = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_custom_method_attributes()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->custom_method_attributes(this->custom_method_attributes_size() - 1).data(),
            static_cast<int>(this->custom_method_attributes(this->custom_method_attributes_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "aspnet.core.MvcRoute.custom_method_attributes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue custom_return_type = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_custom_return_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string custom_method_body_template = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_method_body_template()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->custom_method_body_template().data(), static_cast<int>(this->custom_method_body_template().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "aspnet.core.MvcRoute.custom_method_body_template"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string custom_method_body_inline = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_custom_method_body_inline()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->custom_method_body_inline(this->custom_method_body_inline_size() - 1).data(),
            static_cast<int>(this->custom_method_body_inline(this->custom_method_body_inline_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "aspnet.core.MvcRoute.custom_method_body_inline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_empty_request = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_empty_request_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string custom_exception_handling = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_custom_exception_handling()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->custom_exception_handling(this->custom_exception_handling_size() - 1).data(),
            static_cast<int>(this->custom_exception_handling(this->custom_exception_handling_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "aspnet.core.MvcRoute.custom_exception_handling"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aspnet.core.MvcRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aspnet.core.MvcRoute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MvcRoute::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aspnet.core.MvcRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aspnet.core.HttpMethod method = 1;
  if (this->method() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }

  // .aspnet.core.HttpInputSource source = 2;
  if (this->source() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->source(), output);
  }

  // .google.protobuf.StringValue route_pattern = 3;
  if (this->has_route_pattern()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::route_pattern(this), output);
  }

  // repeated string custom_method_attributes = 4;
  for (int i = 0, n = this->custom_method_attributes_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->custom_method_attributes(i).data(), static_cast<int>(this->custom_method_attributes(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aspnet.core.MvcRoute.custom_method_attributes");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      4, this->custom_method_attributes(i), output);
  }

  // .google.protobuf.StringValue custom_return_type = 5;
  if (this->has_custom_return_type()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::custom_return_type(this), output);
  }

  // string custom_method_body_template = 6;
  if (this->custom_method_body_template().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->custom_method_body_template().data(), static_cast<int>(this->custom_method_body_template().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aspnet.core.MvcRoute.custom_method_body_template");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->custom_method_body_template(), output);
  }

  // repeated string custom_method_body_inline = 7;
  for (int i = 0, n = this->custom_method_body_inline_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->custom_method_body_inline(i).data(), static_cast<int>(this->custom_method_body_inline(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aspnet.core.MvcRoute.custom_method_body_inline");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      7, this->custom_method_body_inline(i), output);
  }

  // bool is_empty_request = 8;
  if (this->is_empty_request() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(8, this->is_empty_request(), output);
  }

  // repeated string custom_exception_handling = 9;
  for (int i = 0, n = this->custom_exception_handling_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->custom_exception_handling(i).data(), static_cast<int>(this->custom_exception_handling(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aspnet.core.MvcRoute.custom_exception_handling");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      9, this->custom_exception_handling(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aspnet.core.MvcRoute)
}

::PROTOBUF_NAMESPACE_ID::uint8* MvcRoute::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:aspnet.core.MvcRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aspnet.core.HttpMethod method = 1;
  if (this->method() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }

  // .aspnet.core.HttpInputSource source = 2;
  if (this->source() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->source(), target);
  }

  // .google.protobuf.StringValue route_pattern = 3;
  if (this->has_route_pattern()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::route_pattern(this), target);
  }

  // repeated string custom_method_attributes = 4;
  for (int i = 0, n = this->custom_method_attributes_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->custom_method_attributes(i).data(), static_cast<int>(this->custom_method_attributes(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aspnet.core.MvcRoute.custom_method_attributes");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(4, this->custom_method_attributes(i), target);
  }

  // .google.protobuf.StringValue custom_return_type = 5;
  if (this->has_custom_return_type()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::custom_return_type(this), target);
  }

  // string custom_method_body_template = 6;
  if (this->custom_method_body_template().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->custom_method_body_template().data(), static_cast<int>(this->custom_method_body_template().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aspnet.core.MvcRoute.custom_method_body_template");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        6, this->custom_method_body_template(), target);
  }

  // repeated string custom_method_body_inline = 7;
  for (int i = 0, n = this->custom_method_body_inline_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->custom_method_body_inline(i).data(), static_cast<int>(this->custom_method_body_inline(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aspnet.core.MvcRoute.custom_method_body_inline");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(7, this->custom_method_body_inline(i), target);
  }

  // bool is_empty_request = 8;
  if (this->is_empty_request() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->is_empty_request(), target);
  }

  // repeated string custom_exception_handling = 9;
  for (int i = 0, n = this->custom_exception_handling_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->custom_exception_handling(i).data(), static_cast<int>(this->custom_exception_handling(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aspnet.core.MvcRoute.custom_exception_handling");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(9, this->custom_exception_handling(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aspnet.core.MvcRoute)
  return target;
}

size_t MvcRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aspnet.core.MvcRoute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string custom_method_attributes = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->custom_method_attributes_size());
  for (int i = 0, n = this->custom_method_attributes_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->custom_method_attributes(i));
  }

  // repeated string custom_method_body_inline = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->custom_method_body_inline_size());
  for (int i = 0, n = this->custom_method_body_inline_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->custom_method_body_inline(i));
  }

  // repeated string custom_exception_handling = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->custom_exception_handling_size());
  for (int i = 0, n = this->custom_exception_handling_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->custom_exception_handling(i));
  }

  // string custom_method_body_template = 6;
  if (this->custom_method_body_template().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->custom_method_body_template());
  }

  // .google.protobuf.StringValue route_pattern = 3;
  if (this->has_route_pattern()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *route_pattern_);
  }

  // .google.protobuf.StringValue custom_return_type = 5;
  if (this->has_custom_return_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *custom_return_type_);
  }

  // .aspnet.core.HttpMethod method = 1;
  if (this->method() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->method());
  }

  // .aspnet.core.HttpInputSource source = 2;
  if (this->source() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->source());
  }

  // bool is_empty_request = 8;
  if (this->is_empty_request() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MvcRoute::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aspnet.core.MvcRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const MvcRoute* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MvcRoute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aspnet.core.MvcRoute)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aspnet.core.MvcRoute)
    MergeFrom(*source);
  }
}

void MvcRoute::MergeFrom(const MvcRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aspnet.core.MvcRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  custom_method_attributes_.MergeFrom(from.custom_method_attributes_);
  custom_method_body_inline_.MergeFrom(from.custom_method_body_inline_);
  custom_exception_handling_.MergeFrom(from.custom_exception_handling_);
  if (from.custom_method_body_template().size() > 0) {

    custom_method_body_template_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.custom_method_body_template_);
  }
  if (from.has_route_pattern()) {
    mutable_route_pattern()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from.route_pattern());
  }
  if (from.has_custom_return_type()) {
    mutable_custom_return_type()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from.custom_return_type());
  }
  if (from.method() != 0) {
    set_method(from.method());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.is_empty_request() != 0) {
    set_is_empty_request(from.is_empty_request());
  }
}

void MvcRoute::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aspnet.core.MvcRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MvcRoute::CopyFrom(const MvcRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aspnet.core.MvcRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MvcRoute::IsInitialized() const {
  return true;
}

void MvcRoute::InternalSwap(MvcRoute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  custom_method_attributes_.InternalSwap(CastToBase(&other->custom_method_attributes_));
  custom_method_body_inline_.InternalSwap(CastToBase(&other->custom_method_body_inline_));
  custom_exception_handling_.InternalSwap(CastToBase(&other->custom_exception_handling_));
  custom_method_body_template_.Swap(&other->custom_method_body_template_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_pattern_, other->route_pattern_);
  swap(custom_return_type_, other->custom_return_type_);
  swap(method_, other->method_);
  swap(source_, other->source_);
  swap(is_empty_request_, other->is_empty_request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MvcRoute::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::aspnet::core::MvcRoute >, 11, false >
  api(kApiFieldNumber, *::aspnet::core::MvcRoute::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace aspnet
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::aspnet::core::MvcRoute* Arena::CreateMaybeMessage< ::aspnet::core::MvcRoute >(Arena* arena) {
  return Arena::CreateInternal< ::aspnet::core::MvcRoute >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
